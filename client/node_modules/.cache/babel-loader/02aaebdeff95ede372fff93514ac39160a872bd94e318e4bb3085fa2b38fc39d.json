{"ast":null,"code":"// File: src/api/serviceApi.ts\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/services';\nexport const getAllServices = () => axios.get(API_URL);\nexport const getDoctorsForService = serviceId => {\n  return axios.get(`${API_URL}/${serviceId}/doctors`);\n};\nexport const createService = (data, token) => axios.post(`${API_URL}/create`, data, {\n  headers: {\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'multipart/form-data' // Вказуємо тип контенту для файлів\n  }\n});\nexport const updateService = (id, data, token) => axios.put(`${API_URL}/${id}`, data, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const hideService = (id, token) => axios.patch(`${API_URL}/${id}/hide`, {}, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const assignDoctorToService = (serviceId, doctorId, token) => {\n  return axios.post(`http://localhost:5000/api/services/${serviceId}/doctors`, {\n    doctorId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","getAllServices","get","getDoctorsForService","serviceId","createService","data","token","post","headers","Authorization","updateService","id","put","hideService","patch","assignDoctorToService","doctorId"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/api/serviceApi.ts"],"sourcesContent":["// File: src/api/serviceApi.ts\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/services';\r\n\r\nexport const getAllServices = () => axios.get(API_URL);\r\n\r\nexport const getDoctorsForService = (serviceId: number) => {\r\n  return axios.get(`${API_URL}/${serviceId}/doctors`);\r\n};\r\n\r\nexport const createService = (data: FormData, token: string) =>\r\n    axios.post(`${API_URL}/create`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data', // Вказуємо тип контенту для файлів\r\n      },\r\n    });\r\n\r\nexport const updateService = (id: number, data: any, token: string) =>\r\n  axios.put(`${API_URL}/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\nexport const hideService = (id: number, token: string) =>\r\n  axios.patch(`${API_URL}/${id}/hide`, {}, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\nexport const assignDoctorToService = (serviceId: number, doctorId: number, token: string) => {\r\n  return axios.post(\r\n    `http://localhost:5000/api/services/${serviceId}/doctors`,\r\n    { doctorId },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAMF,KAAK,CAACG,GAAG,CAACF,OAAO,CAAC;AAEtD,OAAO,MAAMG,oBAAoB,GAAIC,SAAiB,IAAK;EACzD,OAAOL,KAAK,CAACG,GAAG,CAAC,GAAGF,OAAO,IAAII,SAAS,UAAU,CAAC;AACrD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACC,IAAc,EAAEC,KAAa,KACvDR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,SAAS,EAAEM,IAAI,EAAE;EACpCG,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUH,KAAK,EAAE;IAChC,cAAc,EAAE,qBAAqB,CAAE;EACzC;AACF,CAAC,CAAC;AAEN,OAAO,MAAMI,aAAa,GAAGA,CAACC,EAAU,EAAEN,IAAS,EAAEC,KAAa,KAChER,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,IAAIY,EAAE,EAAE,EAAEN,IAAI,EAAE;EAClCG,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUH,KAAK;EAAG;AAC9C,CAAC,CAAC;AAEJ,OAAO,MAAMO,WAAW,GAAGA,CAACF,EAAU,EAAEL,KAAa,KACnDR,KAAK,CAACgB,KAAK,CAAC,GAAGf,OAAO,IAAIY,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;EACvCH,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUH,KAAK;EAAG;AAC9C,CAAC,CAAC;AAEJ,OAAO,MAAMS,qBAAqB,GAAGA,CAACZ,SAAiB,EAAEa,QAAgB,EAAEV,KAAa,KAAK;EAC3F,OAAOR,KAAK,CAACS,IAAI,CACf,sCAAsCJ,SAAS,UAAU,EACzD;IAAEa;EAAS,CAAC,EACZ;IACER,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}