{"ast":null,"code":"// src/api/doctorApi.ts\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users/';\n\n// Отримати профіль лікаря за його ID\nexport const getDoctorProfile = doctorId => {\n  return axios.get(`${API_URL}doctor/profile${doctorId}`);\n};\n\n// Створити профіль лікаря\nexport const createDoctorProfile = async profileData => {\n  const token = localStorage.getItem('token');\n  const userId = localStorage.getItem('userId'); // <-- не забудь зберегти його при логіні\n\n  if (!token || !userId) throw new Error('Unauthorized');\n  return axios.post(`${API_URL}doctor/profile/create/${userId}`, profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// Оновити профіль лікаря\nexport const updateDoctorProfile = (userId, profileData) => {\n  return axios.put(`${API_URL}doctor/profile/${userId}`, profileData);\n};\n\n// Отримати список всіх лікарів\nexport const getAllDoctors = () => {\n  return axios.get(`${API_URL}doctors`);\n};","map":{"version":3,"names":["axios","API_URL","getDoctorProfile","doctorId","get","createDoctorProfile","profileData","token","localStorage","getItem","userId","Error","post","headers","Authorization","updateDoctorProfile","put","getAllDoctors"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/api/doctorApi.ts"],"sourcesContent":["// src/api/doctorApi.ts\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/users/';\r\n\r\n// Отримати профіль лікаря за його ID\r\nexport const getDoctorProfile = (doctorId: number) => {\r\n  return axios.get(`${API_URL}doctor/profile${doctorId}`);\r\n};\r\n\r\n// Створити профіль лікаря\r\nexport const createDoctorProfile = async (profileData: {\r\n  education: string;\r\n  experience: string;\r\n  bio: string;\r\n  photoUrl?: string;\r\n}) => {\r\n  const token = localStorage.getItem('token');\r\n  const userId = localStorage.getItem('userId'); // <-- не забудь зберегти його при логіні\r\n\r\n  if (!token || !userId) throw new Error('Unauthorized');\r\n\r\n  return axios.post(`${API_URL}doctor/profile/create/${userId}`, profileData, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n// Оновити профіль лікаря\r\nexport const updateDoctorProfile = (userId: number, profileData: {\r\n  education?: string;\r\n  experience?: string;\r\n  bio?: string;\r\n  photoUrl?: string;\r\n}) => {\r\n  return axios.put(`${API_URL}doctor/profile/${userId}`, profileData);\r\n};\r\n\r\n// Отримати список всіх лікарів\r\nexport const getAllDoctors = () => {\r\n  return axios.get(`${API_URL}doctors`);\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,OAAO,MAAMC,gBAAgB,GAAIC,QAAgB,IAAK;EACpD,OAAOH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,iBAAiBE,QAAQ,EAAE,CAAC;AACzD,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAG,MAAOC,WAKzC,IAAK;EACJ,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE/C,IAAI,CAACF,KAAK,IAAI,CAACG,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EAEtD,OAAOX,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,yBAAyBS,MAAM,EAAE,EAAEJ,WAAW,EAAE;IAC1EO,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;;AAKD;AACA,OAAO,MAAMQ,mBAAmB,GAAGA,CAACL,MAAc,EAAEJ,WAKnD,KAAK;EACJ,OAAON,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,kBAAkBS,MAAM,EAAE,EAAEJ,WAAW,CAAC;AACrE,CAAC;;AAED;AACA,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOjB,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}