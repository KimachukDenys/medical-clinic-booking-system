{"ast":null,"code":"// File: src/api/serviceApi.ts\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/services';\nexport const getAllServices = (params = {}) => {\n  return axios.get(`${API_URL}`, {\n    params\n  });\n};\n\n// Функція для отримання даних сервісу за ID\nexport const getServiceById = async serviceId => {\n  try {\n    const response = await axios.get(`${API_URL}/services/${serviceId}`);\n    return response.data; // Повертаємо дані сервісу\n  } catch (error) {\n    console.error('Error fetching service:', error);\n    throw new Error('Не вдалося отримати сервіс');\n  }\n};\nexport const getDoctorsForService = async (serviceId, token) => {\n  return axios.get(`${API_URL}/${serviceId}/doctors`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const createService = (data, token) => axios.post(`${API_URL}/create`, data, {\n  headers: {\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'multipart/form-data' // Вказуємо тип контенту для файлів\n  }\n});\nexport const updateService = (id, formData, token) => {\n  return axios.put(`${API_URL}/services/${id}`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const hideService = (id, token) => axios.patch(`${API_URL}/${id}/hide`, {}, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const unhideService = async (serviceId, token) => {\n  return axios.patch(`${API_URL}/${serviceId}/unhide`, null, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const assignDoctorToService = (serviceId, doctorId, token) => {\n  return axios.post(`${API_URL}/${serviceId}/add/doctors`, {\n    doctorId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const removeDoctorFromService = async (serviceId, doctorId, token) => {\n  return axios.delete(`${API_URL}/${serviceId}/remove/doctors/${doctorId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","getAllServices","params","get","getServiceById","serviceId","response","data","error","console","Error","getDoctorsForService","token","headers","Authorization","createService","post","updateService","id","formData","put","hideService","patch","unhideService","assignDoctorToService","doctorId","removeDoctorFromService","delete"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/api/serviceApi.ts"],"sourcesContent":["// File: src/api/serviceApi.ts\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/services';\r\n\r\nexport const getAllServices = (params = {}) => {\r\n  return axios.get(`${API_URL}`, { params });\r\n};\r\n\r\n// Функція для отримання даних сервісу за ID\r\nexport const getServiceById = async (serviceId: string) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/services/${serviceId}`);\r\n    return response.data; // Повертаємо дані сервісу\r\n  } catch (error) {\r\n    console.error('Error fetching service:', error);\r\n    throw new Error('Не вдалося отримати сервіс');\r\n  }\r\n};\r\n\r\nexport const getDoctorsForService = async (serviceId: number, token: string | null) => {\r\n  return axios.get(`${API_URL}/${serviceId}/doctors`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createService = (data: FormData, token: string) =>\r\n    axios.post(`${API_URL}/create`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data', // Вказуємо тип контенту для файлів\r\n      },\r\n    });\r\n\r\nexport const updateService = (id: string, formData: FormData, token: string) => {\r\n  return axios.put(`${API_URL}/services/${id}`, formData, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\n\r\nexport const hideService = (id: number, token: string) =>\r\n  axios.patch(`${API_URL}/${id}/hide`, {}, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n});\r\n\r\nexport const unhideService = async (serviceId: number, token: string) => {\r\n  return axios.patch(`${API_URL}/${serviceId}/unhide`, null, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const assignDoctorToService = (serviceId: number, doctorId: number, token: string) => {\r\n  return axios.post(\r\n    `${API_URL}/${serviceId}/add/doctors`,\r\n    { doctorId },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const removeDoctorFromService = async (serviceId: number, doctorId: number, token: string) => {\r\n  return axios.delete(`${API_URL}/${serviceId}/remove/doctors/${doctorId}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}