{"ast":null,"code":"// File: src/api/serviceApi.ts\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/services';\nexport const getAllServices = (params = {}) => {\n  return axios.get(`${API_URL}`, {\n    params\n  });\n};\nexport const getDoctorsForService = async (serviceId, token) => {\n  return axios.get(`${API_URL}/${serviceId}/doctors`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const createService = (data, token) => axios.post(`${API_URL}/create`, data, {\n  headers: {\n    Authorization: `Bearer ${token}`,\n    'Content-Type': 'multipart/form-data' // Вказуємо тип контенту для файлів\n  }\n});\nexport const updateService = (id, formData, token) => {\n  return axios.put(`${API_URL}/services/${id}`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const hideService = (id, token) => axios.patch(`${API_URL}/${id}/hide`, {}, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const unhideService = async (serviceId, token) => {\n  return axios.patch(`${API_URL}/${serviceId}/unhide`, null, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const assignDoctorToService = (serviceId, doctorId, token) => {\n  return axios.post(`${API_URL}/${serviceId}/add/doctors`, {\n    doctorId\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const removeDoctorFromService = async (serviceId, doctorId, token) => {\n  return axios.delete(`${API_URL}/${serviceId}/remove/doctors/${doctorId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","getAllServices","params","get","getDoctorsForService","serviceId","token","headers","Authorization","createService","data","post","updateService","id","formData","put","hideService","patch","unhideService","assignDoctorToService","doctorId","removeDoctorFromService","delete"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/api/serviceApi.ts"],"sourcesContent":["// File: src/api/serviceApi.ts\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/services';\r\n\r\nexport const getAllServices = (params = {}) => {\r\n  return axios.get(`${API_URL}`, { params });\r\n};\r\n\r\nexport const getDoctorsForService = async (serviceId: number, token: string | null) => {\r\n  return axios.get(`${API_URL}/${serviceId}/doctors`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createService = (data: FormData, token: string) =>\r\n    axios.post(`${API_URL}/create`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data', // Вказуємо тип контенту для файлів\r\n      },\r\n    });\r\n\r\nexport const updateService = (id: string, formData: FormData, token: string) => {\r\n  return axios.put(`${API_URL}/services/${id}`, formData, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\n\r\nexport const hideService = (id: number, token: string) =>\r\n  axios.patch(`${API_URL}/${id}/hide`, {}, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n});\r\n\r\nexport const unhideService = async (serviceId: number, token: string) => {\r\n  return axios.patch(`${API_URL}/${serviceId}/unhide`, null, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const assignDoctorToService = (serviceId: number, doctorId: number, token: string) => {\r\n  return axios.post(\r\n    `${API_URL}/${serviceId}/add/doctors`,\r\n    { doctorId },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const removeDoctorFromService = async (serviceId: number, doctorId: number, token: string) => {\r\n  return axios.delete(`${API_URL}/${serviceId}/remove/doctors/${doctorId}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,cAAc,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;EAC7C,OAAOH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,EAAE,EAAE;IAAEE;EAAO,CAAC,CAAC;AAC5C,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAAA,CAAOC,SAAiB,EAAEC,KAAoB,KAAK;EACrF,OAAOP,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIK,SAAS,UAAU,EAAE;IAClDE,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGA,CAACC,IAAc,EAAEJ,KAAa,KACvDP,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,SAAS,EAAEU,IAAI,EAAE;EACpCH,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUF,KAAK,EAAE;IAChC,cAAc,EAAE,qBAAqB,CAAE;EACzC;AACF,CAAC,CAAC;AAEN,OAAO,MAAMM,aAAa,GAAGA,CAACC,EAAU,EAAEC,QAAkB,EAAER,KAAa,KAAK;EAC9E,OAAOP,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,aAAaa,EAAE,EAAE,EAAEC,QAAQ,EAAE;IACtDP,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMU,WAAW,GAAGA,CAACH,EAAU,EAAEP,KAAa,KACnDP,KAAK,CAACkB,KAAK,CAAC,GAAGjB,OAAO,IAAIa,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;EACvCN,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUF,KAAK;EAAG;AAChD,CAAC,CAAC;AAEF,OAAO,MAAMY,aAAa,GAAG,MAAAA,CAAOb,SAAiB,EAAEC,KAAa,KAAK;EACvE,OAAOP,KAAK,CAACkB,KAAK,CAAC,GAAGjB,OAAO,IAAIK,SAAS,SAAS,EAAE,IAAI,EAAE;IACzDE,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMa,qBAAqB,GAAGA,CAACd,SAAiB,EAAEe,QAAgB,EAAEd,KAAa,KAAK;EAC3F,OAAOP,KAAK,CAACY,IAAI,CACf,GAAGX,OAAO,IAAIK,SAAS,cAAc,EACrC;IAAEe;EAAS,CAAC,EACZ;IACEb,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK;IAChC;EACF,CACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMe,uBAAuB,GAAG,MAAAA,CAAOhB,SAAiB,EAAEe,QAAgB,EAAEd,KAAa,KAAK;EACnG,OAAOP,KAAK,CAACuB,MAAM,CAAC,GAAGtB,OAAO,IAAIK,SAAS,mBAAmBe,QAAQ,EAAE,EAAE;IACxEb,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}