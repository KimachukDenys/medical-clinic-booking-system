{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\components\\\\services\\\\ServiceForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { createService } from '../../api/serviceApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceForm = ({\n  token\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [categoryId, setCategoryId] = useState(''); // Для вибору категорії\n  const [image, setImage] = useState(null); // Для зображення\n  const [categories, setCategories] = useState([]); // Для отримання списку категорій\n\n  useEffect(() => {\n    // Отримуємо список категорій з API (можливо, вам потрібно створити відповідний запит)\n    fetch('http://localhost:5000/api/categories').then(response => response.json()).then(data => setCategories(data)).catch(error => console.error('Error fetching categories:', error));\n  }, []);\n  const handleImageChange = e => {\n    if (e.target.files) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (image) {\n      // Створюємо форму для відправки файлу\n      const formData = new FormData();\n      formData.append('title', title);\n      formData.append('description', description);\n      formData.append('price', price);\n      formData.append('categoryId', categoryId ? categoryId.toString() : '');\n      formData.append('image', image);\n      try {\n        await createService(formData, token);\n        alert('Сервіс створено!');\n      } catch (error) {\n        alert('Помилка при створенні сервісу');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      placeholder: \"\\u0426\\u0456\\u043D\\u0430\",\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: categoryId,\n      onChange: e => setCategoryId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.id,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceForm, \"GTNeSghgUCPaTie1ZOWU+ZPrXJQ=\");\n_c = ServiceForm;\nexport default ServiceForm;\nvar _c;\n$RefreshReg$(_c, \"ServiceForm\");","map":{"version":3,"names":["useState","useEffect","createService","jsxDEV","_jsxDEV","ServiceForm","token","_s","title","setTitle","description","setDescription","price","setPrice","categoryId","setCategoryId","image","setImage","categories","setCategories","fetch","then","response","json","data","catch","error","console","handleImageChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","toString","alert","onSubmit","children","value","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","map","category","id","name","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/components/services/ServiceForm.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { createService } from '../../api/serviceApi';\r\n\r\ninterface Category {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst ServiceForm = ({ token }: { token: string }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [categoryId, setCategoryId] = useState<number | string>(''); // Для вибору категорії\r\n  const [image, setImage] = useState<File | null>(null); // Для зображення\r\n  const [categories, setCategories] = useState<Category[]>([]); // Для отримання списку категорій\r\n\r\n  useEffect(() => {\r\n    // Отримуємо список категорій з API (можливо, вам потрібно створити відповідний запит)\r\n    fetch('http://localhost:5000/api/categories')\r\n      .then(response => response.json())\r\n      .then(data => setCategories(data))\r\n      .catch(error => console.error('Error fetching categories:', error));\r\n  }, []);\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (image) {\r\n      // Створюємо форму для відправки файлу\r\n      const formData = new FormData();\r\n      formData.append('title', title);\r\n      formData.append('description', description);\r\n      formData.append('price', price);\r\n      formData.append('categoryId', categoryId ? categoryId.toString() : '');\r\n      formData.append('image', image);\r\n\r\n      try {\r\n        await createService(formData, token);\r\n        alert('Сервіс створено!');\r\n      } catch (error) {\r\n        alert('Помилка при створенні сервісу');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n        placeholder=\"Назва\"\r\n      />\r\n      <textarea\r\n        value={description}\r\n        onChange={e => setDescription(e.target.value)}\r\n        placeholder=\"Опис\"\r\n      />\r\n      <input\r\n        value={price}\r\n        onChange={e => setPrice(e.target.value)}\r\n        placeholder=\"Ціна\"\r\n        type=\"number\"\r\n      />\r\n\r\n      {/* Вибір категорії */}\r\n      <select value={categoryId} onChange={e => setCategoryId(e.target.value)}>\r\n        <option value=\"\">Виберіть категорію</option>\r\n        {categories.map(category => (\r\n          <option key={category.id} value={category.id}>\r\n            {category.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Поле для завантаження зображення */}\r\n      <input type=\"file\" onChange={handleImageChange} />\r\n\r\n      <button type=\"submit\">Створити</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}