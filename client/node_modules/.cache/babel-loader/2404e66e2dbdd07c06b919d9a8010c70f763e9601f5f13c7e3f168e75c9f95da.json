{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\pages\\\\DoctorListPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/DoctorsPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { getAllDoctors } from '../api/doctorApi';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorsPage = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const response = await getAllDoctors();\n        setDoctors(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Не вдалося завантажити лікарів');\n        setLoading(false);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0414\\u043E\\u043A\\u0442\\u043E\\u0440\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/doctors/${doctor.id}`,\n          children: [doctor.firstName, \" \", doctor.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", doctor.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D: \", doctor.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: doctor.photoUrl,\n          alt: `${doctor.firstName} ${doctor.lastName}`,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor.profile.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, doctor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorsPage, \"fbBE31NTOgyc97b6/kDKQ/lTeT4=\");\n_c = DoctorsPage;\nexport default DoctorsPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorsPage\");","map":{"version":3,"names":["React","useEffect","useState","getAllDoctors","Link","jsxDEV","_jsxDEV","DoctorsPage","_s","doctors","setDoctors","loading","setLoading","error","setError","fetchDoctors","response","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","to","id","firstName","lastName","email","phone","src","photoUrl","alt","width","profile","bio","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/pages/DoctorListPage.tsx"],"sourcesContent":["// src/pages/DoctorsPage.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllDoctors } from '../api/doctorApi';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Doctor {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  photoUrl: string;\r\n  profile: {\r\n    education: string;\r\n    experience: string;\r\n    bio: string;\r\n  };\r\n}\r\n\r\nconst DoctorsPage = () => {\r\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const response = await getAllDoctors();\r\n        setDoctors(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Не вдалося завантажити лікарів');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n\r\n  if (loading) return <div>Завантаження...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Доктори</h1>\r\n      <ul>\r\n        {doctors.map((doctor) => (\r\n          <li key={doctor.id}>\r\n            <Link to={`/doctors/${doctor.id}`}>\r\n              {doctor.firstName} {doctor.lastName}\r\n            </Link>\r\n            <p>Email: {doctor.email}</p>\r\n            <p>Телефон: {doctor.phone}</p>\r\n            <img src={doctor.photoUrl} alt={`${doctor.firstName} ${doctor.lastName}`} width={100} />\r\n            <p>{doctor.profile.bio}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}