{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\components\\\\services\\\\AppointmentForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBookedSlots } from '../../api/appointmentApi'; // шляхи можуть відрізнятись\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentForm = ({\n  value,\n  onChange,\n  doctorId,\n  token\n}) => {\n  _s();\n  const [date, setDate] = useState(value.date);\n  const [time, setTime] = useState(value.time);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    onChange({\n      date,\n      time\n    });\n  }, [date, time]);\n  useEffect(() => {\n    setDate(value.date);\n    setTime(value.time);\n  }, [value]);\n  useEffect(() => {\n    if (!date || !doctorId) return;\n    setLoading(true);\n    getBookedSlots(doctorId, date, token).then(res => setBookedSlots(res.data)).catch(() => setBookedSlots([])).finally(() => setLoading(false));\n  }, [date, doctorId]);\n  const isWeekday = dateStr => {\n    const day = new Date(dateStr).getDay();\n    return day >= 1 && day <= 5;\n  };\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let hour = 8; hour <= 17; hour++) {\n      if (hour === 14) continue;\n      const slot = `${hour.toString().padStart(2, '0')}:00`;\n      slots.push(slot);\n    }\n    return slots;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0434\\u0430\\u0442\\u0443:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => {\n          setTime('');\n          setDate(e.target.value);\n        },\n        min: new Date().toISOString().split('T')[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !isWeekday(date) && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \\u043B\\u0438\\u0448\\u0435 \\u0437 \\u041F\\u043D \\u043F\\u043E \\u041F\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isWeekday(date) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0447\\u0430\\u0441:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0445 \\u0441\\u043B\\u043E\\u0442\\u0456\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: time,\n        onChange: e => setTime(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- \\u0412\\u0438\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0447\\u0430\\u0441 --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), generateTimeSlots().map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: slot,\n          disabled: bookedSlots.includes(slot),\n          children: [slot, \" \", bookedSlots.includes(slot) ? '(Зайнято)' : '']\n        }, slot, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"uM1NLGa94AmbeDLcef7/PL3MP3c=\");\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["useState","useEffect","getBookedSlots","jsxDEV","_jsxDEV","AppointmentForm","value","onChange","doctorId","token","_s","date","setDate","time","setTime","bookedSlots","setBookedSlots","loading","setLoading","then","res","data","catch","finally","isWeekday","dateStr","day","Date","getDay","generateTimeSlots","slots","hour","slot","toString","padStart","push","children","fileName","_jsxFileName","lineNumber","columnNumber","type","e","target","min","toISOString","split","style","color","required","map","disabled","includes","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/components/services/AppointmentForm.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBookedSlots } from '../../api/appointmentApi'; // шляхи можуть відрізнятись\r\n\r\ninterface AppointmentFormProps {\r\n  value: { date: string; time: string };\r\n  onChange: (value: { date: string; time: string }) => void;\r\n  doctorId: number;\r\n  token: string;\r\n}\r\n\r\nconst AppointmentForm: React.FC<AppointmentFormProps> = ({\r\n  value,\r\n  onChange,\r\n  doctorId,\r\n  token,\r\n}) => {\r\n  const [date, setDate] = useState(value.date);\r\n  const [time, setTime] = useState(value.time);\r\n  const [bookedSlots, setBookedSlots] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    onChange({ date, time });\r\n  }, [date, time]);\r\n\r\n  useEffect(() => {\r\n    setDate(value.date);\r\n    setTime(value.time);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (!date || !doctorId) return;\r\n    setLoading(true);\r\n    getBookedSlots(doctorId, date, token)\r\n      .then((res) => setBookedSlots(res.data))\r\n      .catch(() => setBookedSlots([]))\r\n      .finally(() => setLoading(false));\r\n  }, [date, doctorId]);\r\n\r\n  const isWeekday = (dateStr: string) => {\r\n    const day = new Date(dateStr).getDay();\r\n    return day >= 1 && day <= 5;\r\n  };\r\n\r\n  const generateTimeSlots = () => {\r\n    const slots: string[] = [];\r\n    for (let hour = 8; hour <= 17; hour++) {\r\n      if (hour === 14) continue;\r\n      const slot = `${hour.toString().padStart(2, '0')}:00`;\r\n      slots.push(slot);\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>Оберіть дату:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => {\r\n            setTime('');\r\n            setDate(e.target.value);\r\n          }}\r\n          min={new Date().toISOString().split('T')[0]}\r\n        />\r\n        {!isWeekday(date) && <p style={{ color: 'red' }}>Доступно лише з Пн по Пт</p>}\r\n      </div>\r\n\r\n      {isWeekday(date) && (\r\n        <div>\r\n          <label>Оберіть час:</label>\r\n          {loading ? (\r\n            <p>Завантаження доступних слотів...</p>\r\n          ) : (\r\n            <select value={time} onChange={(e) => setTime(e.target.value)} required>\r\n              <option value=\"\">-- Виберіть час --</option>\r\n              {generateTimeSlots().map((slot) => (\r\n                <option key={slot} value={slot} disabled={bookedSlots.includes(slot)}>\r\n                  {slot} {bookedSlots.includes(slot) ? '(Зайнято)' : ''}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}