{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\pages\\\\AdminServicesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllServices } from '../api/serviceApi';\nimport ServiceForm from '../components/services/ServiceForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminServicesPage = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [message, setMessage] = useState('');\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    }\n    getAllServices().then(response => setServices(response.data)) // отримуємо сервіси\n    .catch(() => setMessage('Failed to load services.'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Services Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Services List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [service.title, \" - \", service.description, \" - $\", service.price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {/* Логіка приховування сервісу */},\n          children: \"Hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(ServiceForm, {\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to create services.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminServicesPage, \"/74CDoZArUsV5l5CdyZ6q94UW2M=\");\n_c = AdminServicesPage;\nexport default AdminServicesPage;\nvar _c;\n$RefreshReg$(_c, \"AdminServicesPage\");","map":{"version":3,"names":["React","useState","useEffect","getAllServices","ServiceForm","jsxDEV","_jsxDEV","AdminServicesPage","_s","services","setServices","message","setMessage","token","setToken","storedToken","localStorage","getItem","then","response","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","service","title","description","price","onClick","id","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/pages/AdminServicesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllServices } from '../api/serviceApi';\r\nimport ServiceForm from '../components/services/ServiceForm';\r\n\r\n\r\ninterface Service {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    price: number;\r\n}\r\n\r\nconst AdminServicesPage: React.FC = () => {\r\n  const [services, setServices] = useState<Service[]>([]);\r\n  const [message, setMessage] = useState('');\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n    getAllServices()\r\n      .then(response => setServices(response.data)) // отримуємо сервіси\r\n      .catch(() => setMessage('Failed to load services.'));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Services Page</h1>\r\n\r\n      {/* Виведення повідомлення про помилки */}\r\n      {message && <p>{message}</p>}\r\n\r\n      <h3>Services List</h3>\r\n      <ul>\r\n        {services.map((service) => (\r\n          <li key={service.id}>\r\n            {service.title} - {service.description} - ${service.price}\r\n            {/* Кнопка для приховування сервісу */}\r\n            <button onClick={() => { /* Логіка приховування сервісу */ }}>Hide</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Create a New Service</h3>\r\n      {token ? (\r\n        <ServiceForm token={token} />\r\n      ) : (\r\n        <p>Please log in to create services.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminServicesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,WAAW,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7D,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;IACvB;IACAZ,cAAc,CAAC,CAAC,CACbe,IAAI,CAACC,QAAQ,IAAIT,WAAW,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAAA,CAC7CC,KAAK,CAAC,MAAMT,UAAU,CAAC,0BAA0B,CAAC,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG3Bf,OAAO,iBAAIL,OAAA;MAAAgB,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5BpB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA;QAAAgB,QAAA,GACGM,OAAO,CAACC,KAAK,EAAC,KAAG,EAACD,OAAO,CAACE,WAAW,EAAC,MAAI,EAACF,OAAO,CAACG,KAAK,eAEzDzB,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAM,CAAE,kCAAoC;UAAAV,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHpEE,OAAO,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELpB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5Bb,KAAK,gBACJP,OAAA,CAACF,WAAW;MAACS,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE7BpB,OAAA;MAAAgB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCID,iBAA2B;AAAA2B,EAAA,GAA3B3B,iBAA2B;AA2CjC,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}