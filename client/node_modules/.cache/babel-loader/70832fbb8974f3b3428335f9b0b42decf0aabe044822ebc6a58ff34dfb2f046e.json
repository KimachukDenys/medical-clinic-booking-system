{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/reviews';\nexport const createReview = async (data, token) => {\n  const res = await axios.post(`${API_URL}/create`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\nexport const checkUserReviewExists = async (appointmentId, userId, token) => {\n  // Ендпоінт, який треба додати на бекенді: /reviews/check?appointmentId=...&userId=...\n  const res = await axios.get(`${API_URL}/check`, {\n    params: {\n      appointmentId,\n      userId\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data.exists;\n};\nexport const updateReview = async (id, data, token) => {\n  const res = await axios.put(`${API_URL}/update/${id}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\nexport const deleteReview = async (id, token) => {\n  await axios.delete(`${API_URL}/delete/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getDoctorReviews = async doctorId => {\n  const res = await axios.get(`${API_URL}/doctor/${doctorId}`);\n  return res.data;\n};\nexport const getServiceReviews = async serviceId => {\n  const res = await axios.get(`${API_URL}/service/${serviceId}`);\n  return res.data;\n};","map":{"version":3,"names":["axios","API_URL","createReview","data","token","res","post","headers","Authorization","checkUserReviewExists","appointmentId","userId","get","params","exists","updateReview","id","put","deleteReview","delete","getDoctorReviews","doctorId","getServiceReviews","serviceId"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/api/reviewApi.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/reviews';\r\n\r\nexport const createReview = async (data: {\r\n  appointmentId: number;\r\n  userId: number;\r\n  rating: number;\r\n  comment: string;\r\n}, token: string) => {\r\n  const res = await axios.post(`${API_URL}/create`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const checkUserReviewExists = async (appointmentId: number, userId: number, token: string) => {\r\n  // Ендпоінт, який треба додати на бекенді: /reviews/check?appointmentId=...&userId=...\r\n  const res = await axios.get(`${API_URL}/check`, {\r\n    params: { appointmentId, userId },\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data.exists as boolean;\r\n};\r\n\r\n\r\nexport const updateReview = async (id: number, data: {\r\n  userId: number;\r\n  rating: number;\r\n  comment: string;\r\n}, token: string) => {\r\n  const res = await axios.put(`${API_URL}/update/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const deleteReview = async (id: number, token: string) => {\r\n  await axios.delete(`${API_URL}/delete/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getDoctorReviews = async (doctorId: number) => {\r\n  const res = await axios.get(`${API_URL}/doctor/${doctorId}`);\r\n  return res.data;\r\n};\r\n\r\nexport const getServiceReviews = async (serviceId: number) => {\r\n  const res = await axios.get(`${API_URL}/service/${serviceId}`);\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,IAKlC,EAAEC,KAAa,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAEE,IAAI,EAAE;IACtDI,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACF,IAAI;AACjB,CAAC;AAED,OAAO,MAAMM,qBAAqB,GAAG,MAAAA,CAAOC,aAAqB,EAAEC,MAAc,EAAEP,KAAa,KAAK;EACnG;EACA,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,QAAQ,EAAE;IAC9CY,MAAM,EAAE;MAAEH,aAAa;MAAEC;IAAO,CAAC;IACjCJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACF,IAAI,CAACW,MAAM;AACxB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAU,EAAEb,IAI9C,EAAEC,KAAa,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,WAAWe,EAAE,EAAE,EAAEb,IAAI,EAAE;IAC3DI,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACF,IAAI;AACjB,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAAA,CAAOF,EAAU,EAAEZ,KAAa,KAAK;EAC/D,MAAMJ,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,WAAWe,EAAE,EAAE,EAAE;IAC5CT,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMgB,gBAAgB,GAAG,MAAOC,QAAgB,IAAK;EAC1D,MAAMhB,GAAG,GAAG,MAAML,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAWoB,QAAQ,EAAE,CAAC;EAC5D,OAAOhB,GAAG,CAACF,IAAI;AACjB,CAAC;AAED,OAAO,MAAMmB,iBAAiB,GAAG,MAAOC,SAAiB,IAAK;EAC5D,MAAMlB,GAAG,GAAG,MAAML,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,YAAYsB,SAAS,EAAE,CAAC;EAC9D,OAAOlB,GAAG,CAACF,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}