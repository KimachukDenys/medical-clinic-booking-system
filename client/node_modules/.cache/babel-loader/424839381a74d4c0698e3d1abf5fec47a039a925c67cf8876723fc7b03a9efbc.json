{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\components\\\\categories\\\\CategoryForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/categories/CategoryForm.tsx\nimport { useState } from 'react';\nimport { createCategory } from '../../api/categoryApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryForm = ({\n  token\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createCategory({\n        name\n      }, token);\n      alert('Категорію створено!');\n      setName(''); // Очищаємо форму після успішного створення\n    } catch (error) {\n      alert('Помилка при створенні категорії');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u0457\",\n      className: \"border-2 border-primary rounded-lg px-4 py-2 text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-accent w-full sm:w-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-primary text-background font-semibold px-4 py-2 rounded-lg hover:bg-blue-700 transition\",\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryForm, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = CategoryForm;\nexport default CategoryForm;\nvar _c;\n$RefreshReg$(_c, \"CategoryForm\");","map":{"version":3,"names":["useState","createCategory","jsxDEV","_jsxDEV","CategoryForm","token","_s","name","setName","handleSubmit","e","preventDefault","alert","error","onSubmit","children","value","onChange","target","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/components/categories/CategoryForm.tsx"],"sourcesContent":["// src/components/categories/CategoryForm.tsx\r\nimport { useState } from 'react';\r\nimport { createCategory } from '../../api/categoryApi';\r\n\r\nconst CategoryForm = ({ token }: { token: string }) => {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createCategory({ name }, token);\r\n      alert('Категорію створено!');\r\n      setName(''); // Очищаємо форму після успішного створення\r\n    } catch (error) {\r\n      alert('Помилка при створенні категорії');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n        placeholder=\"Назва категорії\"\r\n        className=\"border-2 border-primary rounded-lg px-4 py-2 text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-accent w-full sm:w-auto\"\r\n      />\r\n      <button type=\"submit\"\r\n        className=\"bg-primary text-background font-semibold px-4 py-2 rounded-lg hover:bg-blue-700 transition\"\r\n      >\r\n        Створити категорію\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMV,cAAc,CAAC;QAAEM;MAAK,CAAC,EAAEF,KAAK,CAAC;MACrCO,KAAK,CAAC,qBAAqB,CAAC;MAC5BJ,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdD,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACET,OAAA;IAAMW,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BZ,OAAA;MACEa,KAAK,EAAET,IAAK;MACZU,QAAQ,EAAEP,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MACvCG,WAAW,EAAC,uFAAiB;MAC7BC,SAAS,EAAC;IAAsI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjJ,CAAC,eACFrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MACnBL,SAAS,EAAC,4FAA4F;MAAAL,QAAA,EACvG;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClB,EAAA,CA7BIF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}