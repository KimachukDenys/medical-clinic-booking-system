{"ast":null,"code":"export function parseJwt(token) {\n  try {\n    const base64Url = token.split('.')[1];\n    if (!base64Url) throw new Error('Invalid token format');\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    return JSON.parse(jsonPayload);\n  } catch (e) {\n    console.error('Error decoding token payload:', e);\n    return null;\n  }\n}","map":{"version":3,"names":["parseJwt","token","base64Url","split","Error","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","e","console","error"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/utils/jwt.ts"],"sourcesContent":["export function parseJwt(token: string) {\r\n  try {\r\n    const base64Url = token.split('.')[1];\r\n    if (!base64Url) throw new Error('Invalid token format');\r\n\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    );\r\n    return JSON.parse(jsonPayload);\r\n  } catch (e) {\r\n    console.error('Error decoding token payload:', e);\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,QAAQA,CAACC,KAAa,EAAE;EACtC,IAAI;IACF,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,IAAI,CAACD,SAAS,EAAE,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;IAEvD,MAAMC,MAAM,GAAGH,SAAS,CAACI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,CAAC,CACTF,KAAK,CAAC,EAAE,CAAC,CACTO,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACjEC,IAAI,CAAC,EAAE,CACZ,CAAC;IACD,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;EAChC,CAAC,CAAC,OAAOW,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,CAAC,CAAC;IACjD,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}