{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u043D\\u0456 4 \\u043A\\u0443\\u0440\\u0441\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 2\\\\\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C\\\\clinic-booking-system\\\\client\\\\src\\\\pages\\\\UserProfilePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getUserProfile } from '../api/userApi'; // Створи цей запит\n// import EditUserProfileForm from '../components/users/EditUserProfileForm'; // Компонент редагування профілю\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfilePage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [isOwnProfile, setIsOwnProfile] = useState(false);\n  useEffect(() => {\n    const loadUserProfile = async () => {\n      if (!userId || isNaN(Number(userId))) {\n        console.error('Invalid userId:', userId);\n        return;\n      }\n      try {\n        const {\n          data\n        } = await getUserProfile(Number(userId));\n        setUser(data);\n\n        // Перевірка чи поточний користувач — власник профілю\n        const token = localStorage.getItem('token');\n        if (token) {\n          const tokenPayload = JSON.parse(atob(token.split('.')[1]));\n          if (tokenPayload.id === Number(userId)) {\n            setIsOwnProfile(true);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n    loadUserProfile();\n  }, [userId]);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [user.firstName, \" \", user.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", user.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), user.photoUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.photoUrl,\n      alt: \"User\",\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this), isOwnProfile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u0442\\u0438 \\u043F\\u0440\\u043E\\u0444\\u0456\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfilePage, \"sRe1nn6vvEeA8Kp29guJngT7cWA=\", false, function () {\n  return [useParams];\n});\n_c = UserProfilePage;\nexport default UserProfilePage;\nvar _c;\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getUserProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfilePage","_s","userId","user","setUser","isOwnProfile","setIsOwnProfile","loadUserProfile","isNaN","Number","console","error","data","token","localStorage","getItem","tokenPayload","JSON","parse","atob","split","id","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","email","phone","photoUrl","src","alt","width","_c","$RefreshReg$"],"sources":["D:/Практичні 4 курс/семестр 2/Проєктний практикум/clinic-booking-system/client/src/pages/UserProfilePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUserProfile } from '../api/userApi'; // Створи цей запит\r\n// import EditUserProfileForm from '../components/users/EditUserProfileForm'; // Компонент редагування профілю\r\n\r\nconst UserProfilePage = () => {\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const [user, setUser] = useState<any>(null);\r\n  const [isOwnProfile, setIsOwnProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadUserProfile = async () => {\r\n      if (!userId || isNaN(Number(userId))) {\r\n        console.error('Invalid userId:', userId);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { data } = await getUserProfile(Number(userId));\r\n        setUser(data);\r\n\r\n        // Перевірка чи поточний користувач — власник профілю\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const tokenPayload = JSON.parse(atob(token.split('.')[1]));\r\n          if (tokenPayload.id === Number(userId)) {\r\n            setIsOwnProfile(true);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n      }\r\n    };\r\n\r\n    loadUserProfile();\r\n  }, [userId]);\r\n\r\n  if (!user) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.firstName} {user.lastName}</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>Phone: {user.phone}</p>\r\n      {user.photoUrl && <img src={user.photoUrl} alt=\"User\" width={200} />}\r\n\r\n      {isOwnProfile && (\r\n        <>\r\n          <h3>Редагувати профіль</h3>\r\n          {/* <EditUserProfileForm userId={Number(userId)} /> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}